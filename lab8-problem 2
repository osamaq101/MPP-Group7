package lesson8.lecture.inclassdemo;

import java.util.Comparator;

public class Product {
	final String title;
	final double price;
	final int model;

	enum SortMethod{
		ByPrice,
		ByTitle
	};

	public static  class ProductTitleAndPriceSort implements Comparator <Product>
	{
		SortMethod method;
		ProductTitleAndPriceSort (SortMethod method)
		{
			this.method=method;
		}
		@Override
		public int compare(Product o1, Product o2) {
         if (method.equals(SortMethod.ByPrice))
			 return Double.compare(o1.getPrice(), o2.getPrice());
		 else
			 return o1.title.compareTo(o2.title);
		}
	}
	public String getTitle() {
		return title;
	}

	public double getPrice() {
		return price;
	}

	public int getModel() {
		return model;
	}

	public Product(String title, Double price, int model) {
		this.title = title;
		this.price = price;
		this.model = model;
	}

	@Override
	public String toString() {
		return String.format("\n %s : %s : %s", title, price, model);
	}

}
package lesson8.lecture.inclassdemo;

import java.util.Comparator;

public class SortProducts implements Comparator<Product>
{

    @Override
    public int compare(Product o1, Product o2) {
         return Double.compare(o1.price,o2.price);

    }
}
package lesson8.lecture.inclassdemo;

import java.util.Comparator;

public class SortProductByTitle implements Comparator<Product>
{
    @Override
    public int compare (Product p1,Product p2)
    {
        return p1.title.compareTo(p2.title);
    }

}
package lesson8.lecture.inclassdemo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

public class TestClass {
    public static void main(String[] args) {
        Product p=new Product("PS4",200.0,1);
        Product p2=new Product("PS3",100.0,1);
        Product p3=new Product("PS5",400.0,1);

        List<Product> list=new ArrayList<>(Arrays.asList(p,p2,p3));

        for (Product prod:list)
            System.out.println("products before sorting by price"+prod);

        list.sort(new SortProducts());

        for (Product prod:list)
            System.out.println("products after sorting by price"+prod);

        list.sort(new SortProductByTitle());

        for (Product prod:list)
            System.out.println("products after sorting by title"+prod);

        System.out.println("now Try Sorting by Price :");


        list.sort(new Product.ProductTitleAndPriceSort(Product.SortMethod.ByTitle));

        for (Product prod : list)
            System.out.println("products after sorting by title: " + prod);

        list.sort(Comparator.comparing(Product::getTitle).thenComparing(Product::getModel));
    }
}
